{% extends 'base.html.twig' %}


{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" 
          integrity="sha384-ENjdO4Dr2bkBIFxQpeoU6OhtH09eKJ9FZcEn9Ck6a0R9TFG1C7xqFqNSJ6Urp3dq" 
          crossorigin="anonymous">
{% endblock %}

{% block body %}
<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div id="alert-placeholder"></div>

            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Soumettez votre réclamation</h4>
                </div>
                <div class="card-body">
                    {{ form_start(form, {'attr': {'id': 'reclamation-form', 'novalidate': 'novalidate'}}) }}

                        <div class="mb-3">
                            {{ form_label(form.sujet, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.sujet, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le sujet'}}) }}
                            {{ form_errors(form.sujet) }}
                        </div>


                        <div class="mb-3">
                            <button type="button" id="generate-ai" class="btn btn-secondary">Utilise l'IA</button>
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.description, null, {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'la description pourrait être générée par l IA', 'rows': 5}}) }}
                            {{ form_errors(form.description) }}
                        </div>

                        <button type="submit" class="btn btn-primary">Soumettre</button>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="loadingModalLabel">En cours...</h5>
      </div>
      <div class="modal-body text-center">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Chargement...</span>
        </div>
        <p class="mt-3">L'IA génère la réclamation...</p>
      </div>
    </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+Yl5QBJblqhRYo6nM1U23we1Yf3bB" 
            crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('reclamation-form');
    const loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));

    form.addEventListener('submit', function(e) {
        e.preventDefault(); 

        const formData = new FormData(form);

        fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => { throw new Error(data.message || 'An error occurred'); });
            }
            return response.json();
        })
        .then(data => {
            const alertPlaceholder = document.getElementById('alert-placeholder');
            alertPlaceholder.innerHTML = `
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    ${data.message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            form.reset(); 
        })
        .catch(error => {
            const alertPlaceholder = document.getElementById('alert-placeholder');
            alertPlaceholder.innerHTML = `
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    ${error.message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
        });
    });

    document.getElementById('generate-ai').addEventListener('click', function(e) {
        e.preventDefault();
        const sujetField = document.getElementById('reclamation_form_sujet');
        const descriptionField = document.getElementById('reclamation_form_description');
        const sujetValue = sujetField.value;

        if (!sujetValue) {
            alert("Veuillez remplir le champ 'Sujet' avant d'utiliser l'IA");
            return;
        }
        loadingModal.show();

        fetch('{{ path("app_reclamation_generate") }}', {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({ sujet: sujetValue })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => { throw new Error(data.message || 'Une erreur est survenue'); });
            }
            return response.json();
        })
        .then(data => {
            if (data.status === 'success') {
                descriptionField.value = data.generatedText;
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            alert("Error: " + error.message);
        })
        .finally(() => {
            loadingModal.hide();
        });
    });
});

    </script>
{% endblock %}
